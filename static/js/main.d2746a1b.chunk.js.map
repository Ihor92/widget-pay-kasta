{"version":3,"sources":["Components/Common/Animation/Animation.js","Components/Input/Input.jsx","Components/Form/Form.jsx","Components/Common/Modal/Modal.js","App.js","index.js"],"names":["Animation","animationType","children","show","timeout","onEnter","onEntering","onEntered","onExit","onExiting","onExited","CSSTransition","in","classNames","unmountOnExit","defaultProps","Input","props","id","type","placeholder","name","autoComplete","onChange","value","className","validDataLength","cardNumber","cardExpiry","cvv","cardOwner","findToday","Date","findThisYear","getFullYear","findThisMonth","getMonth","Form","handleChange","event","target","length","setState","checkDade","checkDataLength","state","handleSubmit","preventDefault","console","log","handleCloseModal","timerId","setTimeout","error","showError","buttonDisabled","lasNumbersYear","toString","substring","corectMonth","onSubmit","this","htmlFor","Component","Modal","showModal","title","tabIndex","role","onClick","data-dismiss","aria-label","aria-hidden","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2746a1b.chunk.js","sourcesContent":["import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './Animation.css';\n\nconst Animation = ({\n  animationType,\n  children,\n  show,\n  timeout,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited\n}) => (\n  <CSSTransition\n    in={show}\n    timeout={timeout}\n    classNames={animationType}\n    unmountOnExit\n    onEnter={onEnter}\n    onEntering={onEntering}\n    onEntered={onEntered}\n    onExit={onExit}\n    onExiting={onExiting}\n    onExited={onExited}\n  >\n    {children}\n  </CSSTransition>\n);\n\nAnimation.defaultProps = {\n  show: false,\n  timeout: 500,\n  animationType: 'fadeIn',\n};\n\nexport default Animation;\n","import React from 'react';\r\n\r\nconst Input = props => {\r\n  const {\r\n    id,\r\n    type,\r\n    placeholder,\r\n    name,\r\n    autoComplete,\r\n    onChange,\r\n    value\r\n  } = props;\r\n\r\n  return (\r\n    <input\r\n      onChange={onChange}\r\n      value={value}\r\n      name={name}\r\n      type={type}\r\n      autoComplete={autoComplete}\r\n      placeholder={placeholder}\r\n      className=\"form-control form-control-sm\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Input;","import React, { Component } from 'react';\r\nimport Input from '../Input/Input';\r\n\r\nconst validDataLength = {\r\n  cardNumber: 16,\r\n  cardExpiry: 4,\r\n  cvv: 3,\r\n  cardOwner: 40,\r\n}\r\n\r\nconst findToday = new Date();\r\nconst findThisYear = findToday.getFullYear();\r\nconst findThisMonth = findToday.getMonth();\r\n\r\nexport default class Form extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cardNumber: '',\r\n      cardExpiry: '',\r\n      cardOwner: '',\r\n      cvv: '',\r\n      error: {\r\n        showError: false,\r\n        buttonDisabled: true\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let lasNumbersYear = findThisYear.toString().substring(2);\r\n    let corectMonth = findThisMonth < 9 ? '0' + findThisMonth : findThisMonth;\r\n    console.log(corectMonth + lasNumbersYear);\r\n  }\r\n\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    if (value.length <= validDataLength[name]) {\r\n      this.setState({\r\n        [name]: value,\r\n      })\r\n    }\r\n  }\r\n\r\n  checkDade = () => {\r\n    // let lasNumbersYear = findThisYear.toString().split('');\r\n    // let corectMonth = findThisMonth < 9 ? '0' + findThisMonth : findThisMonth;\r\n    // console.log(lasNumbersYear);\r\n    // console.log(corectMonth);\r\n  }\r\n\r\n  checkDataLength = (event) => {\r\n    if (\r\n      this.state.cvv.length === validDataLength.cvv &&\r\n      this.state.cardExpiry.length === validDataLength.cardExpiry && \r\n      this.state.cardNumber.length === validDataLength.cardNumber &&\r\n      this.state.cardOwner !== '') {\r\n      \r\n      this.handleSubmit();\r\n      event.preventDefault();\r\n    }  else {\r\n      event.preventDefault();\r\n      console.log(\"is false\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    const { handleCloseModal } = this.props;\r\n    this.timerId = setTimeout(() => {\r\n      console.log('Оплата прошла успешно');\r\n      handleCloseModal() ;\r\n    }, 1000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.checkDataLength}>\r\n          <label htmlFor=\"number-card\">Номер карти</label>\r\n          <Input\r\n            id=\"number-card\"\r\n            type=\"number\"\r\n            placeholder=\"#### #### #### ####\"\r\n            name=\"cardNumber\"\r\n            onChange={this.handleChange}\r\n            value={this.state.cardNumber}\r\n            autoComplete=\"off\"\r\n          />\r\n          {false && (\r\n            <span>\r\n              Невірна карта\r\n            </span>\r\n          )}\r\n\r\n          <label htmlFor=\"card-expiry\">Термін дії</label>\r\n          <Input\r\n            id=\"card-expiry\"\r\n            type=\"number\"\r\n            placeholder=\"ММ / РР\"\r\n            name=\"cardExpiry\"\r\n            onChange={this.handleChange}\r\n            value={this.state.cardExpiry}\r\n            autoComplete=\"off\"\r\n          />\r\n          {false && (\r\n            <span>\r\n              Невірний термін\r\n            </span>\r\n          )}\r\n\r\n          <label htmlFor=\"card-owner\">Власник карти</label>\r\n          <Input\r\n            id=\"card-owner\"\r\n            type=\"text\"\r\n            placeholder=\"CARDHOLDER NAME\"\r\n            name=\"cardOwner\"\r\n            onChange={this.handleChange}\r\n            value={this.state.cardOwner}\r\n            autoComplete=\"on\"\r\n          />\r\n          {false && (\r\n            <span>\r\n              Введіть ПІБ власника картки\r\n            </span>\r\n          )}\r\n\r\n          <label htmlFor=\"cvv\">CVV</label>\r\n          <Input\r\n            id=\"cvv\"\r\n            type=\"password\"\r\n            placeholder=\"XXX\"\r\n            name=\"cvv\"\r\n            onChange={this.handleChange}\r\n            value={this.state.cvv}\r\n            autoComplete=\"off\"\r\n          />\r\n          {false && (\r\n            <span>\r\n              Перевірте cvv\r\n            </span>\r\n          )}\r\n          \r\n          <label htmlFor=\"remember\">Запам'ятати цю картку</label>\r\n          <input id=\"remember\" type=\"checkbox\" />\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-danger\"\r\n            // disabled\r\n          >Оплатити</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport Animation from '../Animation/Animation';\nimport Form from '../../Form/Form';\n\nimport './Modal.css';\n\nconst Modal = ({ handleCloseModal, showModal, title, children }) => (\n  <Animation timeout={200} show={showModal}>\n    <div className=\"modal d-block\" tabIndex=\"-1\" role=\"dialog\">\n      <span className=\"modal-backdrop show\" onClick={handleCloseModal} />\n      <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header border-bottom-0\">\n            <h5 className=\"modal-title\">{title}</h5>\n\n            <Form handleCloseModal={ handleCloseModal } />\n            \n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={handleCloseModal}\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n\n          </div>\n          <div className=\"modal-body\">{children}</div>\n        </div>\n      </div>\n    </div>\n  </Animation>\n);\n\nexport default Modal;\n","import React, {Component} from 'react';\nimport './App.css';\nimport Modal from './Components/Common/Modal/Modal';\n\n\nexport default class App extends Component {\n  state = {\n    showModal: false\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <button onClick={() => this.setState({showModal: true})}>\n          Оплатить картой\n        </button>\n          <Modal\n            title=\"Actions\"\n            showModal={this.state.showModal}\n            handleCloseModal={() => this.setState({ showModal: false })}\n        >\n          modal contex\n            {/* {renderModalContent()} */}\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}